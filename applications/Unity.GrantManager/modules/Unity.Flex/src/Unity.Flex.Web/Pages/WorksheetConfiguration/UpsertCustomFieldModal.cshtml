@page
@using Microsoft.Extensions.Localization
@using Unity.Flex.Localization;
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal;
@using Unity.Flex.Web.Pages.WorksheetConfiguration;

@model Unity.Flex.Web.Pages.WorksheetConfiguration.UpsertCustomFieldModalModel;

@inject IStringLocalizer<FlexResource> L
@{
    Layout = null;
}
@section scripts
{
    <abp-script src="/Pages/WorksheetConfiguration/Index.js" />
}
<form method="post" asp-page-handler="OnPostAsync" id="customFieldInfo">
    <abp-input type="hidden" id="CustomFieldId" asp-for="@Model.Id" />
    <abp-input type="hidden" id="Order" asp-for="@Model.Order" />
    <abp-input type="hidden" id="UpsertAction" asp-for="@Model.UpsertAction" />
    <abp-modal size="Large" id="custom-field-info-modal">
        <abp-modal-header class="custom-field-info-modal-header" title="@Model.UpsertAction"></abp-modal-header>
        <abp-modal-body>
            <abp-row class="m-0 p-0">
                <abp-column size="_12" class="px-1">
                    <abp-input asp-for="@Model.Name" />
                </abp-column>
            </abp-row>
            <abp-row class="m-0 p-0">
                <abp-column size="_12" class="px-1">
                    <abp-input asp-for="@Model.Label" />
                </abp-column>
            </abp-row>
        </abp-modal-body>
        <abp-modal-footer>
            <button type="button" class="btn btn-primary" onclick="handleSaveQuestionButtonClick(event)">@AbpModalButtons.Save</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@AbpModalButtons.Cancel</button>            
        </abp-modal-footer>
    </abp-modal>
</form>

<script>
    async function handleSaveQuestionButtonClick(event) {
        event.preventDefault();
        const action = await askToCreateNewVersion();
        if (action) {
            $('#ActionType').val($('#ActionType').val() + action);
            $('#questionInfo').submit();
        }
    }

    async function deleteQuestion() {
        let result = await Swal.fire({
            title: "Delete Question",
            text: 'Are you sure you want to delete this question?',
            showCancelButton: true,
            confirmButtonText: 'Confirm',
            customClass: {
                confirmButton: 'btn btn-primary',
                cancelButton: 'btn btn-secondary'
            }
        });

        if (result.isConfirmed) {
            const action = await askToCreateNewVersion();
            if (action) {
                $('#ActionType').val('Delete Question' + action);
                $('#questionInfo').submit();
            }
        }
    }
</script>
