@using Unity.Flex.Web.Views.Shared.Components.DataGridWidget;

@model DataGridViewModel;

@if (Model.Field != null)
{
    <input type="hidden" id="table-options-@Model.Field.Id" value="@Model.TableOptions" />
    <div class="custom-grid-container">
        @if (Model.SummaryOption != Unity.Flex.Worksheets.Definitions.DataGridDefinitionSummaryOption.None)
        {
            <abp-row class="@(Model.SummaryOption == Unity.Flex.Worksheets.Definitions.DataGridDefinitionSummaryOption.Above ? "grid-position-above" : "grid-position-below")">
                <div class="dynamic-grid-summary" id="summary-@Model.Field.Id">
                    @foreach (var field in Model.Summary.Fields)
                    {
                        <div class="form-group">
                            <label for="@field.Key">@field.Label</label>
                            <input data-field-type="@field.Type" type="text" class="form-control" value="@field.Value" name="total-@field.Key" id="total-@field.Key" disabled>
                        </div>
                    }
                </div>
            </abp-row>
        }

        <abp-row class="m-0 p-0 grid-position">
            <div class="p-2 custom-grid-action-bar">
                <div class="search-action-bar_search-wrapper">
                    <input type="search" id="table-search-@Model.Field.Id" data-table-id="@Model.Field.Id" placeholder="Search" class="tbl-search custom-tbl-search">
                </div>
                <div id="btn-container-@Model.Field.Id" class="dynamic-buttons-div">
                </div>
            </div>
            <table data-value-id="@Model.Field.CurrentValueId" 
                   data-field-id="@Model.Field.Id" 
                   data-wsi-id="@Model.WorksheetInstanceId"
                   data-ws-id="@Model.WorksheetId"
                   data-ws-anchor="@Model.UiAnchor"
                   id="@Model.Field.Id" 
                   class="display custom-dynamic-table @(Model.AllowEdit ? "custom-table-edit" : "")">
                <caption></caption>
                <thead>
                    <tr>
                        @foreach (var column in Model.Columns)
                        {
                            <th>@column</th>
                        }
                        @if (Model.AllowEdit)
                        {
                            <th></th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Rows.Length; i++)
                    {
                        <tr data-row-no="@i">
                            @foreach (var cell in Model.Rows[i].Cells)
                            {
                                <td>
                                    @cell.Value
                                </td>
                            }
                            @if (Model.AllowEdit)
                            {
                                <td>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </abp-row>
    </div>
}
