@using Unity.Flex.Web.Views.Shared.Components;
@using Unity.Flex.Web.Views.Shared.Components.RadioWidget;
@using Unity.Flex.Worksheets.Definitions;

@model RadioViewModel;

@if (Model.Field != null)
{
    <fieldset>
        <legend></legend>
        @foreach (var option in ((RadioDefinition?)Model.Field?.Definition?.ConvertDefinition(Model.Field.Type))?.Options ?? [])
        {
            <div class="custom-radio-button">
                @if (Model.Field != null)
                {
                    @if ((Model.Field?.CurrentValue?.ConvertInputValueOrNull(Model.Field.Type))?.ToString() == option.Value)
                    {
                        <input type="@Model.Field.Type.ConvertInputType()"
                               id="@($"{Model.Field.Name}.{Model.Name}.{Model.Field.Id}.{option.Value}")"
                               name="@($"{Model.Field.Name}.{Model.Name}.{Model.Field.Id}")"
                               value="@($"{option.Value}")"
                               onchange="@($"notifyFieldChange('{Model.Name}', '{Model.Field?.UiAnchor}', this)")"
                               checked />
                    }
                    else
                    {
                        <input type="@Model.Field?.Type.ConvertInputType()"
                               id="@($"{Model.Field?.Name}.{Model.Name}.{Model.Field?.Id}.{option.Value}")"
                               name="@($"{Model.Field?.Name}.{Model.Name}.{Model.Field?.Id}")"
                               value="@($"{option.Value}")"
                               onchange="@($"notifyFieldChange('{Model.Name}', '{Model.Field?.UiAnchor}', this)")" />
                    }
                    <label for="@($"{Model.Field?.Name}.{Model.Name}.{Model.Field?.Id}")">@($"{option.Label}")</label>
                }
            </div>
        }
    </fieldset>
}