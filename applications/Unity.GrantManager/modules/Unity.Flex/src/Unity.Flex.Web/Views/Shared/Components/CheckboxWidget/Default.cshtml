@using Unity.Flex.Web.Views.Shared.Components.CheckboxWidget;
@using Unity.Flex.Web.Views.Shared.Components;
@using Unity.Flex;

@model CheckboxViewModel;

@if (Model.Field != null)
{
    
    var fieldId = Model.WorksheetId.HasValue
        ? $"{Model.Field?.Name}.{Model.Name}.{Model.Field?.Id}.{Model.WorksheetId}"
        : $"{Model.Field?.Name}.{Model.Name}.{Model.Field?.Id}";
    
    <div class="custom-fields-checkbox-wrapper">
        @if ((bool)(Model.Field?.CurrentValue?.ConvertInputValueOrNull(Model.Field.Type) ?? false))
        {
            <input type="@Model.Field?.Type.ConvertInputType()"
                   id="@fieldId"
                   name="@fieldId"
                   onchange="@($"notifyFieldChange('{Model.Name}', '{Model.Field?.UiAnchor}', this)")"
                   checked />
        }
        else
        {
            <input type="@Model.Field?.Type.ConvertInputType()"
                   id="@fieldId"
                   name="@fieldId"
                   onchange="@($"notifyFieldChange('{Model.Name}', '{Model.Field?.UiAnchor}', this)")" />
        }
        <label for="@fieldId">@($"{Model.Field?.Label}")</label>
    </div>
}