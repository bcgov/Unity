@using Unity.Flex.Web.Views.Shared.Components.CurrencyWidget;
@using Unity.Flex.Web.Views.Shared.Components;
@using Unity.Flex;

@model CurrencyViewModel;

@if (Model.Field != null)
{
    
    var fieldId = Model.WorksheetId.HasValue
        ? $"{Model.Field.Name}.{Model.Name}.{Model.Field.Id}.{Model.WorksheetId}"
        : $"{Model.Field.Name}.{Model.Name}.{Model.Field.Id}";
    
    <div class="custom-input-group">
        <span class="custom-input-prepend">$</span>
        <input type="@Model.Field.Type.ConvertInputType()"
               label="@Model.Field.Label"
               value="@Model.Field.CurrentValue?.ConvertInputValueOrNull(Model.Field.Type)"
               class="@Model.Field.Type.ApplyCssClass()"
               data-min="@Model.Field.Definition?.ConvertDefinition(Model.Field.Type)?.GetMinValueOrNull()"
               data-max="@Model.Field.Definition?.ConvertDefinition(Model.Field.Type)?.GetMaxValueOrNull()"
               id="@fieldId"
               name="@fieldId"
               onchange="@($"notifyFieldChange('{Model.Name}', '{Model.Field?.UiAnchor}', this)")"/>
        <span id="@fieldId-error" class="text-danger field-validation-error"></span>
    </div>
}