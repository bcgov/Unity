version: '3.8'

name: unity_local

services:
  unity-grantmanager-web:
    image: 'unity-grantmanager-web'
    build:
      context: .
      dockerfile: src/Unity.GrantManager.Web/Dockerfile
    container_name: unity-grantmanager-web
    depends_on:
      unity-data-postgres:
        condition: service_healthy
      unity-data-dbmigrator:
        condition: service_completed_successfully
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    ports:
        - "${UNITY_WEB_PORT_EXT_HTTPS:-44342}:${UNITY_WEB_PORT_INT_HTTPS:-443}"
        - "${UNITY_WEB_PORT_EXT:-8080}:${UNITY_WEB_PORT_INT:-80}"
    networks: 
      - common-network

  unity-data-dbmigrator:
    image: 'unity-grantmanager-dbmigrator'
    build:
      context: .
      dockerfile: src/Unity.GrantManager.DbMigrator/Dockerfile
    depends_on:
      unity-data-postgres:
        condition: service_healthy
    networks: 
      - common-network

  unity-data-postgres:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${UNITY_POSTGRES_DB:-postgres}
      - POSTGRES_USER=${UNITY_POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${UNITY_POSTGRES_PASSWORD:-admin}
      - PGPORT=${UNITY_DB_PORT:-5432}
    ports:
      - "${UNITY_DB_PORT:-5432}:${UNITY_DB_PORT:-5432}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5  
    networks: 
      - common-network

volumes:
  postgres_data:
    driver: local

networks:
  common-network:
    driver: bridge