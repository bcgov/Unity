version: '3.8'

name: unity_local

services:
  unity-grantmanager-web:
    image: 'image-registry.apps.silver.devops.gov.bc.ca/d18498-dev/unity-grantmanager-web:${TAG:-latest}'
    build:
      context: .
      dockerfile: src/Unity.GrantManager.Web/Dockerfile
    container_name: unity-grantmanager-web
    env_file:
      - .env
    depends_on:
      unity-data-postgres:
        condition: service_healthy
      unity-data-dbmigrator:
        condition: service_completed_successfully
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    ports:
      - 8080:8080
      - 44342:443
    networks: 
      - common-network

  unity-data-dbmigrator:
    image: 'unity-grantmanager-dbmigrator:${TAG:-latest}'
    build:
      context: .
      dockerfile: src/Unity.GrantManager.DbMigrator/Dockerfile
    env_file:
      - .env
    depends_on:
      unity-data-postgres:
        condition: service_healthy
    networks: 
      - common-network

  unity-data-postgres:
    image: postgres:15.4
    volumes:
      - postgres_data:/var/opt/postgres
    environment:
      POSTGRES_DB: ${UNITY_POSTGRES_DB:-UnityGrantManager}
      POSTGRES_USER: ${UNITY_POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${UNITY_POSTGRES_PASSWORD:-admin}
      POSTGRES_DB_PORT: 5432
    ports:
      - "${POSTGRES_DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5  
    networks: 
      - common-network

volumes:
  postgres_data:
    driver: local

networks:
  common-network:
    driver: bridge