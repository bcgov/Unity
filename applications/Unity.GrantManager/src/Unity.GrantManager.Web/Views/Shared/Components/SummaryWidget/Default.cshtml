@using System.Globalization;
@using Unity.GrantManager.Web.Views.Shared.Components.SummaryWidget;
@using Volo.Abp.AspNetCore.Mvc.UI.Layout;
@using Unity.GrantManager.Web.Pages.GrantApplications;
@using Unity.GrantManager.Localization;
@using Microsoft.Extensions.Localization;

@inject IStringLocalizer<GrantManagerResource> L

@model SummaryWidgetViewModel
@{
    Layout = null;
}

<abp-row class="px-1 pb-2 mb-4 summary-container">
    <h6 class="ps-2 fw-bold">@L["Summary:ApplicationSummaryTitle"].Value</h6>
    <table aria-describedby="Application Summary" class="summary-table">
        <tr>
            <th></th>
            <th></th>
        </tr>
        <tr>
            <td colspan="2">
                @Html.LabelFor(model => model.Category, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.Category)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.EconomicRegion, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.EconomicRegion)
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.SubmissionDate, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.SubmissionDate)
                </div>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                @Html.LabelFor(model => model.OrganizationName, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.OrganizationName)
                </div>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                @Html.LabelFor(model => model.OrganizationNumber, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.OrganizationNumber)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.City, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.City)
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.Community, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.Community)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.RequestedAmount, new { @class= "display-input-label" })
                <div class="display-input display-input-currency">
                    @Html.DisplayFor(model => model.RequestedAmount)
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.ProjectBudget, new { @class= "display-input-label" })
                <div class="display-input display-input-currency">
                    @Html.DisplayFor(model => model.ProjectBudget)
                </div>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                @Html.LabelFor(model => model.Sector, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.Sector)
                </div>
            </td>
        </tr>
    </table>
</abp-row>
<abp-row class="px-1 pb-2 mb-4 summary-container">
    <h6 class="ps-2 fw-bold">@L["Summary:AssessmentSummaryTitle"].Value</h6>
    <table aria-describedby="Assessment Summary" class="summary-table">
        <tr>
            <th></th>
            <th></th>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.Status, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.Status)
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.LikelihoodOfFunding, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.LikelihoodOfFunding)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.AssessmentStartDate, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.AssessmentStartDate)
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.FinalDecisionDate, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.FinalDecisionDate)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.TotalScore, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.TotalScore)
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.AssessmentResult, new { @class= "display-input-label" })
                <div class="display-input">
                    @Html.DisplayFor(model => model.AssessmentResult)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.RecommendedAmount, new { @class= "display-input-label" })
                <div class="display-input display-input-currency">
                    @Html.DisplayFor(model => model.RecommendedAmount)
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.ApprovedAmount, new { @class= "display-input-label" })
                <div class="display-input display-input-currency">
                    @Html.DisplayFor(model => model.ApprovedAmount)
                </div>
            </td>
        </tr>
    </table>
</abp-row>




