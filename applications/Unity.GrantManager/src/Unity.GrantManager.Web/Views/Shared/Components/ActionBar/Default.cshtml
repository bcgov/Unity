@using Unity.GrantManager.Localization;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.Extensions.Localization;
@using Unity.GrantManager.Permissions;

@inject IStringLocalizer<GrantManagerResource> L
@inject IAuthorizationService AuthorizationService

<div class="action-bar p-2">
    <div class="d-flex align-items-start justify-content-start gap-2">

        <abp-button id="externalLink"
                    text="@L["ApplicationList:OpenButton"].Value"
                    disabled="true"
                    icon-type="Other"
                    icon="fl fl-mini-contract-2-mirrored"
                    button-type="Primary" />

        <abp-button id="assignApplication"
                    data-selector="applications-table-actions"
                    text="@L["ApplicationList:AssignButton"].Value"
                    disabled="true"
                    icon-type="Other"
                    icon="fl fl-add-friend"
                    button-type="Light" />


        <abp-button id="tagApplication"
                    data-selector="applications-table-actions"
                    text="@L["ApplicationList:TagButton"].Value"
                    disabled="true"
                    icon-type="Other"
                    icon="fl fl-tag"
                    button-type="Light" />


        @* <abp-button id="copyLink"
                    text="@L["ApplicationList:CopyLinkButton"].Value"
                    disabled="true"
                    icon-type="Other"
                    icon="fl fl-link"
                    button-type="Light" />

        <abp-button id="downloadApplication"
                   
                    text="@L["ApplicationList:DownloadButton"].Value"
                    disabled="true"
                    icon-type="Other"
                    icon="fl fl-download"
                    button-type="Light" /> *@
    </div>

    <div id="dynamicButtonContainerId" class="d-flex align-items-end justify-content-end gap-2">
        <abp-button id="btn-toggle-filter"
                    text="Filter"
                    disabled="false"                    
                    icon-type="Other"
                    icon="fl fl-filter"
                    button-type="Light" />

        <abp-button id="applicationLink"                  
                    text="@L["ApplicationList:InfoButton"].Value"
                    icon-type="Other"
                    disabled="true"
                    icon="fl fl-open-pane"
                    button-type="Light" />
        
        @* @if (User.IsInRole(UnityRoles.SystemAdmin))
        {
            <abp-dropdown>
                <abp-dropdown-button button-type="Secondary" link="false" text="Admin" icon="fl fl-settings" icon-type="Other" />
                <abp-dropdown-menu>
                    <abp-dropdown-item id="resyncAllSubmissionAttachments" class="action-bar__drop-down-icon-link">
                        <i class="fl fl-synch"></i>  @L["ApplicationList:ResyncAllSubmissionAttachmentsButton"].Value
                    </abp-dropdown-item>
                </abp-dropdown-menu>
            </abp-dropdown>
        } *@
        <abp-row>
            <abp-column class="spinner-loader">
                <div class="spinner-grow" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </abp-column>
        </abp-row>
    </div>
</div>

<div class="offcanvas offcanvas-end container-fluid px-2" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="applicationAsssessmentSummary" aria-labelledby="offcanvasScrollingLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasRightLabel"></h5>
        <button type="button" id="closeSummaryCanvas" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div id="summaryWidgetArea">
            @await Component.InvokeAsync("SummaryWidget")
        </div>
    </div>
</div>


