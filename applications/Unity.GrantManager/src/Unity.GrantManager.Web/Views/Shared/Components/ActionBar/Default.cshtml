@using Unity.GrantManager.Localization;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.Extensions.Localization;
@using Unity.GrantManager.Permissions;
@using Unity.GrantManager.Identity;

@inject IStringLocalizer<GrantManagerResource> L
@inject IAuthorizationService AuthorizationService

<div class="action-bar p-2">
    <div id="dynamicButtonContainerId" class="row">
        <div class="col-md-8">
            <input type="text" id="search" placeholder="Search">
        </div>
        <div class="btn-group col-md-4" id="app_custom_buttons" style="flex-direction: row-reverse;">
            <abp-button id="btn-toggle-filter"
                        text="Filter"
                        class="custom-table-btn flex-none"
                        style="order:1"
                        button-type="Secondary" />

            <abp-button id="assignApplication"
                        data-selector="applications-table-actions"
                        class="custom-table-btn flex-none"
                        style="order:3"
                        text="@L["ApplicationList:AssignButton"].Value"
                        button-type="Secondary" />

            <abp-button id="tagApplication"
                        data-selector="applications-table-actions"
                        class="custom-table-btn flex-none"
                        style="order:4"
                        text="@L["ApplicationList:TagButton"].Value"
                        button-type="Secondary" />

            <abp-button id="externalLink"
                        text="@L["ApplicationList:OpenButton"].Value"
                        style="order:5"
                        class="custom-table-btn flex-none"
                        button-type="Secondary" />


            @* <abp-button id="copyLink"
            text="@L["ApplicationList:CopyLinkButton"].Value"
            disabled="true"
            icon-type="Other"
            icon="fl fl-link"
            button-type="Light" />

            <abp-button id="downloadApplication"

            text="@L["ApplicationList:DownloadButton"].Value"
            disabled="true"
            icon-type="Other"
            icon="fl fl-download"
            button-type="Light" /> *@
        </div>
    </div>

    <div class="d-flex align-items-end justify-content-end gap-2">

        @*         <abp-button id="applicationLink"
        text="@L["ApplicationList:InfoButton"].Value"
        class="custom-table-btn"
        disabled="true"
        button-type="Secondary" />
        *@
        @if (User.IsInRole(UnityRoles.SystemAdmin))
        {
            <abp-dropdown>
                <abp-dropdown-button button-type="Secondary" link="false" text="Admin" />
                <abp-dropdown-menu>
                    <abp-dropdown-item id="resyncAllSubmissionAttachments" class="action-bar__drop-down-icon-link">
                        <i class="fl fl-synch"></i>  @L["ApplicationList:ResyncAllSubmissionAttachmentsButton"].Value
                    </abp-dropdown-item>
                </abp-dropdown-menu>
            </abp-dropdown>
        }
        <abp-row>   
            <abp-column class="spinner-loader">
                <div class="spinner-grow" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </abp-column>
        </abp-row>
    </div>
</div>

<div class="offcanvas offcanvas-end container-fluid px-2" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="applicationAsssessmentSummary" aria-labelledby="offcanvasScrollingLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasRightLabel"></h5>
        <button type="button" id="closeSummaryCanvas" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div id="summaryWidgetArea">
            @await Component.InvokeAsync("SummaryWidget")
        </div>
    </div>
</div>


