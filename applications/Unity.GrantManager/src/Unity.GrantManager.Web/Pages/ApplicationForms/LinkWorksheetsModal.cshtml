@page
@using Microsoft.Extensions.Localization
@using Unity.Flex.Localization;
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal;
@model Unity.GrantManager.Web.Pages.ApplicationForms.LinkWorksheetModalModel

@inject IStringLocalizer<FlexResource> L

@{
    Layout = null;
}

<form method="post" asp-page-handler="OnPostAsync" id="formInfo">
    <abp-input type="hidden" id="ChefsFormVersionId" asp-for="@Model.ChefsFormVersionId" />
    <abp-input type="hidden" id="AssessmentInfoSlotIds" asp-for="@Model.AssessmentInfoSlotIds" />
    <abp-input type="hidden" id="ApplicantInfoSlotIds" asp-for="@Model.ApplicantInfoSlotIds" />
    <abp-input type="hidden" id="ProjectInfoSlotIds" asp-for="@Model.ProjectInfoSlotIds" />
    <abp-input type="hidden" id="PaymentInfoSlotIds" asp-for="@Model.PaymentInfoSlotIds" />
    <abp-input type="hidden" id="FundingAgreementInfoSlotIds" asp-for="@Model.FundingAgreementInfoSlotIds" />
    <abp-input type="hidden" id="CustomTabsSlotIds" asp-for="@Model.CustomTabsSlotIds" />
    <abp-modal size="ExtraLarge" id="worksheet-info-modal">
        <abp-modal-header class="site-info-modal-header" title="Link Worksheets"></abp-modal-header>
        <abp-modal-body>
            <div class="drop-layout">
                <div class="published-forms-col">
                    <div class="slot-title">Available Worksheets:</div>
                    <div class="available-worksheets drag-target multi-target" draggable="false" data-target="worksheets">
                        @foreach (var worksheet in Model.PublishedWorksheets!)
                        {
                            <div class="published-form draggable-card" draggable="true" data-worksheet-id="@worksheet.Id">
                                <span class="published-form-title">
                                    @worksheet.Title (@worksheet.Name)
                                </span>
                            </div>
                        }
                    </div>
                </div>
                <div class="slots-col">
                    <div class="slot-title">Assessment Info:</div>
                    <div class="multi-slot drag-target multi-target assessment-info-list" draggable="false" data-target="assessment-info">
                        @if (Model.AssessmentInfoLinks != null)
                        {
                            @foreach (var assessmentInfo in Model.AssessmentInfoLinks.OrderBy(s => s.Order))
                            {
                                <div class="draggable-card" draggable="true" data-worksheet-id="@assessmentInfo.WorksheetId">
                                    <span class="published-form-title">
                                        @assessmentInfo.Worksheet.Title (@assessmentInfo.Worksheet.Name)
                                    </span>
                                </div>
                            }
                        }
                    </div>
                    <div class="slot-title">Project Info:</div>
                    <div class="multi-slot drag-target multi-target project-info-list" draggable="false" data-target="project-info">
                        @if (Model.ProjectInfoLinks != null)
                        {
                            @foreach (var projectInfo in Model.ProjectInfoLinks.OrderBy(s => s.Order))
                            {
                                <div class="draggable-card" draggable="true" data-worksheet-id="@projectInfo.WorksheetId">
                                    <span class="published-form-title">
                                        @projectInfo.Worksheet.Title (@projectInfo.Worksheet.Name)
                                    </span>
                                </div>
                            }
                        }
                    </div>
                    <div class="slot-title">Applicant Info:</div>
                    <div class="multi-slot drag-target multi-target applicant-info-list" draggable="false" data-target="applicant-info">
                        @if (Model.ApplicantInfoLinks != null)
                        {
                            @foreach (var applicantInfo in Model.ApplicantInfoLinks.OrderBy(s => s.Order))
                            {
                                <div class="draggable-card" draggable="true" data-worksheet-id="@applicantInfo.WorksheetId">
                                    <span class="published-form-title">
                                        @applicantInfo.Worksheet.Title (@applicantInfo.Worksheet.Name)
                                    </span>
                                </div>
                            }
                        }
                    </div>
                    <div class="slot-title">Payment Info:</div>
                    <div class="multi-slot drag-target multi-target payment-info-list" draggable="false" data-target="payment-info">
                        @if (Model.PaymentInfoLinks != null)
                        {
                            @foreach (var paymentInfo in Model.PaymentInfoLinks.OrderBy(s => s.Order))
                            {
                                <div class="draggable-card" draggable="true" data-worksheet-id="@paymentInfo.WorksheetId">
                                    <span class="published-form-title">
                                        @paymentInfo.Worksheet.Title (@paymentInfo.Worksheet.Name)
                                    </span>
                                </div>
                            }
                        }
                    </div>
                    <div class="slot-title">Funding Agreement:</div>
                    <div class="multi-slot drag-target multi-target funding-agreement-info-list" draggable="false" data-target="funding-agreement-info">
                        @if (Model.FundingAgreementInfoLinks != null)
                        {
                            @foreach (var fundingAgreementInfo in Model.FundingAgreementInfoLinks.OrderBy(s => s.Order))
                            {
                                <div class="draggable-card" draggable="true" data-worksheet-id="@fundingAgreementInfo.WorksheetId">
                                    <span class="published-form-title">
                                        @fundingAgreementInfo.Worksheet.Title (@fundingAgreementInfo.Worksheet.Name)
                                    </span>
                                </div>
                            }
                        }
                    </div>
                    <div class="slot-title">Additional Tabs:</div>
                    <div class="multi-slot drag-target multi-target custom-tabs-list" draggable="false" data-target="custom-tabs">
                        @if (Model.CustomTabLinks != null)
                        {
                            @foreach (var customTab in Model.CustomTabLinks.OrderBy(s => s.Order))
                            {
                                <div class="draggable-card" draggable="true" data-worksheet-id="@customTab.WorksheetId">
                                    <span class="published-form-title">
                                        @customTab.Worksheet.Title (@customTab.Worksheet.Name)
                                    </span>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="save-note">
                <p>
                    <b>Note:</b> Saving will cause the mapping screen to refresh, please make sure you have saved all your mapping changes.
                </p>
            </div>
        </abp-modal-body>
        <abp-modal-footer>
            <button type="submit" class="btn unt-btn-primary btn-primary">@AbpModalButtons.Save</button>
            <button type="button" class="btn unt-btn-link btn-link" data-bs-dismiss="modal">@AbpModalButtons.Cancel</button>
        </abp-modal-footer>
    </abp-modal>
</form>


