apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: unity-grantmanager-dbmigrator
message: |-
  A build config has been created in your project: unity-grantmanager-dbmigrator.
  For more information about using this template, including OpenShift considerations, 
  see template usage guide found in the project readme.md and wiki documents.
metadata:
  name: unity-grantmanager-dbmigrator
  # namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
  # This template uses a separate parameter .env file to override the default values defined in this section. 
  # oc process -f .\openshift\unity-grantmanager-dbmigrator.yaml --param-file=.env | oc create -f -
  annotations:
    description: |-
      Template for building a DotNet console application on OpenShift.
    iconClass: icon-build
    openshift.io/display-name: DotNet console application
    template.openshift.io/long-description: |-
      This template defines resources needed to build and deploy a GitHub DotNet core console application.
    tags: dotnet,unity-grantmanager-dbmigrator
parameters:
# Project namespace parameters
- description: "The OpenShift project license plate 6 charater alpha numberic."
  displayName: "Project Namespace"
  name: PROJECT_NAMESPACE
  required: true
  generate: expression
  from: "[a-z0-9]{6}"
- description: "The OpenShift environment name [dev, test, prod]."
  displayName: "Environment name"
  name: ENV_NAME
  required: true
  value: "dev"
- description: The name of the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: unity-grantmanager-dbmigrator
- description: The name of the application grouping.
  displayName: Application Group
  name: APPLICATION_GROUP
  value: unity-grantmanager
# Additional parameters for project application provisioning.
- description: The version of the image to use, e.g. v1.0.0, v0.1.0, latest the ImageStream tag.
  displayName: Application Version
  name: IMAGE_STREAM_TAG
  required: true
  value: latest
- description: Git source URI for application
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: 'https://github.com/bcgov/Unity'
- description: Git branch/tag reference
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
  value: dev
- description: Path within Git project to build from usually the root project directory.
  displayName: Context Directory
  name: CONTEXT_DIR
  value: /applications/Unity.GrantManager
- description: GitHub build trigger secret (Incomming Webhook)
  displayName: Github Webhook Secret
  from: '[a-zA-Z0-9]{26}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
  required: true
- description: Generic build trigger secret (Incomming Webhook)
  displayName: Generic Webhook Secret
  from: '[a-zA-Z0-9]{26}'
  generate: expression
  name: GENERIC_WEBHOOK_SECRET
  required: true
# Template objects to instantiate the project.
objects:
# Secrets 
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${APPLICATION_NAME}-github-webhook-secret
    labels:
      app: ${APPLICATION_NAME}
      app.kubernetes.io/component: ${APPLICATION_NAME}
      app.kubernetes.io/instance: ${APPLICATION_NAME}-${ENV_NAME}
      app.kubernetes.io/name: ${APPLICATION_NAME}
      app.kubernetes.io/part-of: ${APPLICATION_GROUP}
  stringData:
    WebHookSecretKey: ${GITHUB_WEBHOOK_SECRET}
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${APPLICATION_NAME}-generic-webhook-secret
    labels:
      app: ${APPLICATION_NAME}
      app.kubernetes.io/component: ${APPLICATION_NAME}
      app.kubernetes.io/instance: ${APPLICATION_NAME}-${ENV_NAME}
      app.kubernetes.io/name: ${APPLICATION_NAME}
      app.kubernetes.io/part-of: ${APPLICATION_GROUP}
  stringData:
    WebHookSecretKey: ${GENERIC_WEBHOOK_SECRET}
# Imagestream
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      app.kubernetes.io/component: ${APPLICATION_NAME}
      app.kubernetes.io/instance: ${APPLICATION_NAME}-${ENV_NAME}
      app.kubernetes.io/name: ${APPLICATION_NAME}
      app.kubernetes.io/part-of: ${APPLICATION_GROUP}
# Build Config 
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
      app.kubernetes.io/component: ${APPLICATION_NAME}
      app.kubernetes.io/instance: ${APPLICATION_NAME}-${ENV_NAME}
      app.kubernetes.io/name: ${APPLICATION_NAME}
      app.kubernetes.io/part-of: ${APPLICATION_GROUP}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:${IMAGE_STREAM_TAG}
    postCommit: {}
    resources: 
      limits:
        cpu: 1
        memory: 2G
      requests:
        cpu: 250m
        memory: 512Mi
    runPolicy: Serial
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: src/Unity.GrantManager.DbMigrator/Dockerfile
        type: Docker
    triggers:
    - type: ConfigChange
    - generic:
        secretReference:
          name: ${APPLICATION_NAME}-generic-webhook-secret
      type: Generic
    - github:
        secretReference:
          name: ${APPLICATION_NAME}-github-webhook-secret
      type: GitHub
