apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: unity-s3-object-storage
  # This template uses a separate parameter .env file to override the default values defined in this section. 
  # oc process -f .\openshift\unity-s3-object-storage.yaml --param-file=.env | oc create -f -
  labels:
    template: unity-s3-object-storage
  annotations:
    description: |-
      Template for S3 connection information in OpenShift.
parameters:
# Project namespace parameters
- description: The name of the application grouping.
  displayName: Application Group
  name: APPLICATION_GROUP
  value: unity-grantmanager
- description: The name of the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: unity-grantmanager-web
# Additional parameters for S3 object storage
- description: The name of the application.
  displayName: Application Name
  name: STORAGE_OBJECT_NAME
  required: true
  value: s3-object-storage
- name: AccessKeyID
  displayName: "Access Key Login ID"
  description: "The Access Key for S3 compatible object storage account"
  from: '[A-Z0-9]{20}_default'
  generate: expression
- name: BucketName
  displayName: "Bucket Name"
  description: "The object storage bucket name"
  required: true
  value: "econ-unity-dev"
- name: Endpoint
  displayName: "API endpoint for S3 compatible storage account"
  description: "Object store URL. eg: https://econ.objectstore.gov.bc.ca"
  required: true
  value: "https://econ.objectstore.gov.bc.ca"
- name: SecretKey
  displayName: "Secret Key"
  description: "S3 account Secret Access Key, similar to a password."
  from: '[\w]{32}_default'
  generate: expression
- name: ApplicationFolder
  displayName: ApplicationFolder
  description: "The object storage Application Folder name"
  required: true
  value: "Unity/Application"
- name: AssessmentFolder
  displayName: AssessmentFolder
  description: "The object storage Assessment Folder name"
  required: true
  value: "Unity/Adjudication"
# Template objects to instantiate the project.
objects:
# Secrets
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${STORAGE_OBJECT_NAME}
    labels:
      app: ${APPLICATION_NAME}
      app.kubernetes.io/component: ${APPLICATION_NAME}
      app.kubernetes.io/instance: ${APPLICATION_NAME}-1
      app.kubernetes.io/name: ${APPLICATION_NAME}
      app.kubernetes.io/part-of: ${APPLICATION_GROUP}
  stringData:
    Access-Key-ID: ${AccessKeyID}
    Bucket-Display-Name: ${BucketName}
    Rest-Endpoint: ${Endpoint}
    Secret-Key: ${SecretKey}
  type: Opaque
# Configmap
- apiVersion: v1 
  kind: ConfigMap 
  metadata:
    name: ${STORAGE_OBJECT_NAME}
    labels:
      app: ${APPLICATION_NAME}
      app.kubernetes.io/component: ${APPLICATION_NAME}
      app.kubernetes.io/instance: ${APPLICATION_NAME}-1
      app.kubernetes.io/name: ${APPLICATION_NAME}
      app.kubernetes.io/part-of: ${APPLICATION_GROUP}
  data:
    # Configuration values can be set as key-value properties
    ApplicationFolder: ${ApplicationFolder}
    AssessmentFolder: ${AssessmentFolder}
    DisallowedFileTypes: '[ "exe" , "sh" , "ksh" , "bat" , "cmd" ]'
    MaxFileSize: '25'
