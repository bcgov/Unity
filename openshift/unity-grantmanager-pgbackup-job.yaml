apiVersion: template.openshift.io/v1
kind: Template
message: |-
  A job has been created in your project: unity-grantmanager-pgbackup-job.
  For more information about using this template, including OpenShift considerations,
  see template usage guide found in the project readme.md and wiki documents.
metadata:
  name: unity-grantmanager-pgbackup-job
  # This template uses a separate parameter .env file to override the default values defined in this section.
  # oc process -f .\openshift\unity-grantmanager-pgbackup-job.yaml --param-file=pgbackup-job.env | oc create -f -
  labels:
    template: unity-grantmanager-pgbackup-job
  annotations:
    description: |-
      Template for running a dotnet console application once in OpenShift.
    iconClass: icon-build
    openshift.io/display-name: Database Backup Job
    template.openshift.io/long-description: |-
      This template defines resources needed to run a Postgres-16 container application.
    tags: database,postgresql
parameters:
# Project namespace parameters
- description: The name of the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: unity-grantmanager-pgbackup
- description: The name of the application grouping.
  displayName: Application Group
  name: APPLICATION_GROUP
  required: true
  value: unity-grantmanager
# Additional parameters for project database provisioning.
- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: unity-data-postgres
- name: DATABASE_BACKUP_KEEP
  description: 'Number of backups to keep'
  value: '2'
- name: DATABASE_BACKUP_VOLUME_CLAIM
  description: 'Name of the volume claim to be used as storage'
  required: true
  value: unity-data-backup
- description: The Namespace where the container image resides default=project-tools cluster=openshift, source=registry.redhat.io/rhel9/postgresql-16
  displayName: Registry Namespace
  name: IMAGEPULL_NAMESPACE
  from: '[a-zA-Z0-9]{5}-tools'
  generate: expression
- description: The Openshift ImageStream Name
  displayName: Registry imagestream name
  name: IMAGESTREAM_NAME
  required: true
  value: postgresql-16
- description: The version of the postgresql container image to use.
  displayName: Registry container image  to pull
  name: IMAGESTREAM_TAG
  required: true
  value: latest
- description: The registry path of the postgresql container image to use.
  displayName: Registry container image to pull
  name: IMAGEPULL_REGISTRY
  required: true
  value: image-registry.apps.silver.devops.gov.bc.ca
# Resource limits
- description: The minimum amount of CPU the container is guaranteed.
  displayName: CPU Request
  name: CPU_REQUEST
  required: true
  value: 50m
- description: The minimum amount of memory the container is guaranteed.
  displayName: Memory Request
  name: MEMORY_REQUEST
  required: true
  value: 64Mi
# Template objects to instantiate the project.
objects:
# RunOnce Job for Database Backups
- apiVersion: batch/v1
  kind: Job
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      job-name: ${APPLICATION_NAME}
      app.openshift.io/runtime: build
      app.kubernetes.io/component: ${APPLICATION_NAME}
      app.kubernetes.io/instance: ${APPLICATION_NAME}-1
      app.kubernetes.io/name: ${APPLICATION_NAME}
      app.kubernetes.io/part-of: ${APPLICATION_GROUP}
  spec:
    parallelism: 1
    completions: 1
    backoffLimit: 1
    selector: {}
    successfulJobsHistoryLimit: 1
    failedJobsHistoryLimit: 1
    template:
      metadata:
        name: ${APPLICATION_NAME}
        labels:
          application: ${APPLICATION_NAME}
      spec:
        volumes:
          - name: ${APPLICATION_NAME}
            persistentVolumeClaim:
              claimName: ${DATABASE_BACKUP_VOLUME_CLAIM}
        containers:
          - name: ${APPLICATION_NAME}
            image: ${IMAGEPULL_REGISTRY}/${IMAGEPULL_NAMESPACE}/${IMAGESTREAM_NAME}:${IMAGESTREAM_TAG}
            command:
              - 'bash'
              - '-eo'
              - 'pipefail'
              - '-c'
              - >
                trap "echo Backup failed; exit 0" ERR; date;
                FILENAME=dumpall-${DATABASE_SERVICE_NAME}-`date +%Y-%m-%d_%H%M%S`.sql.gz;
                time (find /var/lib/pgsql/backups -type f -name "*-${DATABASE_SERVICE_NAME}-*"  -exec ls -1tr "{}" + | head -n -$DATABASE_BACKUP_KEEP | xargs rm -fr;
                PGPASSWORD="$UNITY_POSTGRES_PASSWORD" pg_dumpall --username=$UNITY_POSTGRES_USER --host=$UNITY_DB_HOST --port=$UNITY_DB_PORT --column-inserts --clean | gzip > /var/lib/pgsql/backups/$FILENAME);
                echo "";echo "Backup successful";du -h /var/lib/pgsql/backups/$FILENAME;
                echo "";echo "to restore the backup use: $ psql --username=$UNITY_POSTGRES_USER --password --host=$UNITY_DB_HOST --port=$UNITY_DB_PORT --username postgres < /var/lib/pgsql/backups/<backupfile> (unpacked with gunzip)";
                echo "";ls -lR /var/lib/pgsql/backups
            ## Add single and mapped environment values
            env:
              - name: DATABASE_BACKUP_KEEP
                value: ${DATABASE_BACKUP_KEEP}
              - name: TZ
                value: Canada/Pacific
            envFrom:
              ## Add all from ${DATABASE_SERVICE_NAME}
              - secretRef:
                  name: ${DATABASE_SERVICE_NAME}
            volumeMounts:
              - name: ${APPLICATION_NAME}
                mountPath: /var/lib/pgsql/backups
            resources:
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
        restartPolicy: Never
